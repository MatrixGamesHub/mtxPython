#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

from thrift.Thrift import TType, TMessageType, TFrozenDict, TException, TApplicationException
from thrift.protocol.TProtocol import TProtocolException
import sys

from thrift.transport import TTransport


class Direction(object):
    UP = 0
    RIGHT = 1
    DOWN = 2
    LEFT = 3

    _VALUES_TO_NAMES = {
        0: "UP",
        1: "RIGHT",
        2: "DOWN",
        3: "LEFT",
    }

    _NAMES_TO_VALUES = {
        "UP": 0,
        "RIGHT": 1,
        "DOWN": 2,
        "LEFT": 3,
    }


class GroundTexture(object):
    NONE = 0
    RANDOM = 1
    GRAS = 2
    WOOD = 3
    ROCK = 4
    SAND = 5
    LAVA = 6
    SNOW = 7
    ICE = 8
    EARTH = 9
    METAL = 10
    MARBLE = 11
    PAVEMENT = 12
    CONCRETE = 13

    _VALUES_TO_NAMES = {
        0: "NONE",
        1: "RANDOM",
        2: "GRAS",
        3: "WOOD",
        4: "ROCK",
        5: "SAND",
        6: "LAVA",
        7: "SNOW",
        8: "ICE",
        9: "EARTH",
        10: "METAL",
        11: "MARBLE",
        12: "PAVEMENT",
        13: "CONCRETE",
    }

    _NAMES_TO_VALUES = {
        "NONE": 0,
        "RANDOM": 1,
        "GRAS": 2,
        "WOOD": 3,
        "ROCK": 4,
        "SAND": 5,
        "LAVA": 6,
        "SNOW": 7,
        "ICE": 8,
        "EARTH": 9,
        "METAL": 10,
        "MARBLE": 11,
        "PAVEMENT": 12,
        "CONCRETE": 13,
    }


class WallTexture(object):
    RED_BRICKS = 0
    WHITE_BRICKS = 1

    _VALUES_TO_NAMES = {
        0: "RED_BRICKS",
        1: "WHITE_BRICKS",
    }

    _NAMES_TO_VALUES = {
        "RED_BRICKS": 0,
        "WHITE_BRICKS": 1,
    }


class LevelInfo(object):
    """
    Attributes:
     - name
     - groundTexture
     - wallTexture
    """

    thrift_spec = (
        None,  # 0
        (1, TType.STRING, 'name', 'UTF8', None, ),  # 1
        (2, TType.I32, 'groundTexture', None, None, ),  # 2
        (3, TType.I32, 'wallTexture', None, None, ),  # 3
    )

    def __init__(self, name=None, groundTexture=None, wallTexture=None,):
        self.name = name
        self.groundTexture = groundTexture
        self.wallTexture = wallTexture

    def read(self, iprot):
        if iprot._fast_decode is not None and isinstance(iprot.trans, TTransport.CReadableTransport) and self.thrift_spec is not None:
            iprot._fast_decode(self, iprot, (self.__class__, self.thrift_spec))
            return
        iprot.readStructBegin()
        while True:
            (fname, ftype, fid) = iprot.readFieldBegin()
            if ftype == TType.STOP:
                break
            if fid == 1:
                if ftype == TType.STRING:
                    self.name = iprot.readString().decode('utf-8') if sys.version_info[0] == 2 else iprot.readString()
                else:
                    iprot.skip(ftype)
            elif fid == 2:
                if ftype == TType.I32:
                    self.groundTexture = iprot.readI32()
                else:
                    iprot.skip(ftype)
            elif fid == 3:
                if ftype == TType.I32:
                    self.wallTexture = iprot.readI32()
                else:
                    iprot.skip(ftype)
            else:
                iprot.skip(ftype)
            iprot.readFieldEnd()
        iprot.readStructEnd()

    def write(self, oprot):
        if oprot._fast_encode is not None and self.thrift_spec is not None:
            oprot.trans.write(oprot._fast_encode(self, (self.__class__, self.thrift_spec)))
            return
        oprot.writeStructBegin('LevelInfo')
        if self.name is not None:
            oprot.writeFieldBegin('name', TType.STRING, 1)
            oprot.writeString(self.name.encode('utf-8') if sys.version_info[0] == 2 else self.name)
            oprot.writeFieldEnd()
        if self.groundTexture is not None:
            oprot.writeFieldBegin('groundTexture', TType.I32, 2)
            oprot.writeI32(self.groundTexture)
            oprot.writeFieldEnd()
        if self.wallTexture is not None:
            oprot.writeFieldBegin('wallTexture', TType.I32, 3)
            oprot.writeI32(self.wallTexture)
            oprot.writeFieldEnd()
        oprot.writeFieldStop()
        oprot.writeStructEnd()

    def validate(self):
        return

    def __repr__(self):
        L = ['%s=%r' % (key, value)
             for key, value in self.__dict__.items()]
        return '%s(%s)' % (self.__class__.__name__, ', '.join(L))

    def __eq__(self, other):
        return isinstance(other, self.__class__) and self.__dict__ == other.__dict__

    def __ne__(self, other):
        return not (self == other)
